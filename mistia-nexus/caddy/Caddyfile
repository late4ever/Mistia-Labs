# --- Global Options ---
{
	email {env.CADDY_EMAIL}
	acme_dns cloudflare {env.CLOUDFLARE_API_TOKEN}
	admin :2019 {
		origins caddy.mistia.xyz
	}

	# --- DNS over TLS ---
	layer4 {
		:853 {
			route {
				proxy 192.168.50.2:853
			}
		}
	}
}

# --- Health Check Endpoint ---
:80 {
	handle /healthz {
		respond "OK" 200
	}
}

(security_headers) {
	header {
		Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
		X-Frame-Options "SAMEORIGIN"
		X-Content-Type-Options "nosniff"
		X-XSS-Protection "1; mode=block"
		Referrer-Policy "strict-origin-when-cross-origin"
		-Server
	}
}

(proxy_headers) {
    header_up Host {http.request.host}
    header_up X-Real-IP {http.request.remote.ip}
    header_up X-Forwarded-For {http.request.remote.ip}
}

# --- Dedicated AdGuard Home Block ---
# This block gets a specific certificate and has all headers explicitly imported.
# --8<-- [start:adguard]
adguard.mistia.xyz {
	import security_headers

	# DNS-over-HTTPS endpoint
	handle /dns-query* {
		reverse_proxy https://192.168.50.2:443 {
			import proxy_headers
			transport http {
				tls
			}
		}
	}

	# AdGuard Home UI
	handle {
		reverse_proxy http://192.168.50.2:80 {
			import proxy_headers
		}
	}
}
# --8<-- [end:adguard]

# --- Main Site Block with Wildcard Certificate ---
*.mistia.xyz {
	import security_headers
	encode zstd br gzip

	# --- Service Routing ---

	# --8<-- [start:nexus]
	@nexus host nexus.mistia.xyz
	handle @nexus {
		reverse_proxy https://192.168.50.4:9443 {
			import proxy_headers
			transport http {
				tls_insecure_skip_verify
			}
		}
	}
	# --8<-- [end:nexus]

	# --8<-- [start:asus_et12]
	@asus_et12 host asus-et12.mistia.xyz
	handle @asus_et12 {
		reverse_proxy https://192.168.50.1:8443 {
			import proxy_headers
			transport http {
				tls_insecure_skip_verify
			}
		}
	}
	# --8<-- [end:asus_et12]

	# --8<-- [start:caddyadmin]
	@caddyadmin host caddy.mistia.xyz
	handle @caddyadmin {
		reverse_proxy http://localhost:2019 {
			import proxy_headers
		}
	}
	# --8<-- [end:caddyadmin]

	# --8<-- [start:portainer]
	@portainer host portainer.mistia.xyz
	handle @portainer {
		reverse_proxy http://portainer:9000 {
			import proxy_headers
		}
	}
	# --8<-- [end:portainer]

	# --8<-- [start:duplicati]
	@duplicati host duplicati.mistia.xyz
	handle @duplicati {
		reverse_proxy http://duplicati:8200 {
			import proxy_headers
		}
	}
	# --8<-- [end:duplicati]
	
	# --8<-- [start:nextcloud]
	@nextcloud host nextcloud.mistia.xyz
	handle @nextcloud {
		reverse_proxy http://nextcloud:80 {
			import proxy_headers
		}
	}
	# --8<-- [end:nextcloud]
	
	# --8<-- [start:filecloud]
	@filecloud host filecloud.mistia.xyz
	handle @filecloud {
		reverse_proxy http://filecloud:80 {
			import proxy_headers
		}
	}
	# --8<-- [end:filecloud]
	
	# Fallback for any other subdomain
	handle {
		root * /srv/www
		rewrite * /404.html
		file_server
	}
}