# Ensure the basic Docker network is in place
- name: 'SETUP: Ensure mistia-proxy-net Exists'
  community.docker.docker_network:
    name: mistia-proxy-net
    state: present
    ipam_config:
      - subnet: '{{network_subnet}}'

- name: 'ACTION: Deploy AdGuard Home Service'
  ansible.builtin.include_tasks: _deploy-service.yml
  loop: >-
    {{
      all_services
      | selectattr("deploy_to", "defined")
      | selectattr("deploy_to", "equalto", "nexus")
      | selectattr("name", "equalto", "adguard-home")
      | list
    }}
  loop_control:
    loop_var: service
  when: >
    (ansible_run_tags | length == 0) or
    (ansible_run_tags | intersect([service.name] + (service.tags | default([]))) | length > 0)

- name: 'VERIFY: Wait for AdGuard Home to be healthy and stable'
  block:
    - name: 'VERIFY: AdGuard Home Container is Healthy'
      ansible.builtin.include_tasks: _verify-service.yml
      loop: >-
        {{
          all_services
          | selectattr("name", "equalto", "adguard-home")
          | list
        }}
      loop_control:
        loop_var: service
      when: >
        (ansible_run_tags | length == 0) or
        (ansible_run_tags | intersect([service.name] + (service.tags | default([]))) | length > 0)

    - name: 'SETUP: Add extra wait time for AdGuard Home to initialize'
      ansible.builtin.pause:
        seconds: 15
      loop: >-
        {{
          all_services
          | selectattr("name", "equalto", "adguard-home")
          | list
        }}
      loop_control:
        loop_var: service
      when: >
        (ansible_run_tags | length == 0) or
        (ansible_run_tags | intersect([service.name] + (service.tags | default([]))) | length > 0)

- name: 'ACTION: Deploy All Other Services'
  ansible.builtin.include_tasks: _deploy-service.yml
  loop: >-
    {{
      all_services
      | selectattr("deploy_to", "defined")
      | selectattr("deploy_to", "equalto", "nexus")
      | rejectattr("name", "equalto", "adguard-home")
      | list
    }}
  loop_control:
    loop_var: service
  when: >
    (ansible_run_tags | length == 0) or
    (ansible_run_tags | intersect([service.name] + (service.tags | default([]))) | length > 0)

- name: 'VERIFY: All Other Services are Healthy'
  ansible.builtin.include_tasks: _verify-service.yml
  loop: >-
    {{
      all_services
      | selectattr("deploy_to", "defined")
      | selectattr("deploy_to", "equalto", "nexus")
      | rejectattr("name", "equalto", "adguard-home")
      | list
    }}
  loop_control:
    loop_var: service
  when: >
    (ansible_run_tags | length == 0) or
    (ansible_run_tags | intersect([service.name] + (service.tags | default([]))) | length > 0)
