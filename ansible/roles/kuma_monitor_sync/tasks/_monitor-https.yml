- name: 'SETUP: Get All Monitor Https'
  set_fact:
    current_monitor_https: >-
      [{% for m in result.monitors if m.type == 'http' -%}
        {
          "name": "{{ m.name }}",
          "tags": [
            {% for t in m.tags | default([]) %}
              {"name": "{{ t.name }}", "value": "{{ t.value }}"}{% if not loop.last %},{% endif %}
            {% endfor %}
          ]
        }{% if not loop.last %},{% endif %}
      {%- endfor %}]

# - name: 'DEBUG: Current Monitor Https'
#   ansible.builtin.debug:
#     msg: 'Current Monitor Https: {{ current_monitor_https }}'

- name: 'SETUP: Calculate Monitor Https to Delete'
  ansible.builtin.set_fact:
    monitor_https_todelete: >-
      {{ (current_monitor_https | map(attribute='name') | list) | difference(desired_monitor_https | map(attribute='name') | list) }}

# - name: 'DEBUG: Monitor Https to Delete'
#   ansible.builtin.debug:
#     msg: 'Monitor Https to delete: {{ monitor_https_todelete }}'

- name: 'ACTION: Delete Monitor Https'
  lucasheld.uptime_kuma.monitor:
    api_url: '{{ kuma_url}}'
    api_token: '{{ kuma_login.token }}'
    name: '{{ item }}'
    state: absent
  loop: '{{ monitor_https_todelete }}'

# - name: 'DEBUG: Monitor Https to Add'
#   ansible.builtin.debug:
#     msg: "Monitor Https to add: {{ desired_monitor_https | map(attribute='name') | list }}"

- name: 'ACTION: Ensure Monitor Https'
  lucasheld.uptime_kuma.monitor:
    api_url: '{{ kuma_url}}'
    api_token: '{{ kuma_login.token }}'
    parent_name: '{{ item.kuma_parent }}'
    name: '{{ item.name }}'
    description: '{{ item.kuma_description | default(item.name) }}'
    type: http
    url: '{{ item.kuma_url }}'
    interval: '{{ item.kuma_interval | default(kuma_interval) }}'
    maxretries: '{{ item.kuma_maxretries | default(kuma_maxretries) }}'
    ignoreTls: '{{ item.kuma_ignoreTls | default(false) }}'
    expiryNotification: '{{ item.kuma_expiryNotification | default(kuma_expiryNotification) }}'
    state: present
  loop: '{{ desired_monitor_https }}'

- name: 'ACTION: Remove All Monitor Tags'
  lucasheld.uptime_kuma.monitor_tag:
    api_url: '{{ kuma_url}}'
    api_token: '{{ kuma_login.token }}'
    monitor_name: '{{ item.0.name }}'
    tag_name: '{{ item.1.name }}'
    value: '{{ item.1.value }}'
    state: absent
  loop: "{{ current_monitor_https | subelements('tags') }}"
  when:
    - item.0.name not in monitor_https_todelete
    - item.1.name not in (desired_monitor_https | selectattr('name', 'equalto', item.0.name) | map(attribute='tags') | first | default([]))

- name: 'ACTION: Tag Monitor'
  lucasheld.uptime_kuma.monitor_tag:
    api_url: '{{ kuma_url}}'
    api_token: '{{ kuma_login.token }}'
    monitor_name: '{{ item.0.name }}'
    tag_name: '{{ item.1 }}'
    value: ''
    state: present
  loop: "{{ desired_monitor_https | subelements('tags') }}"
